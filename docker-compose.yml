version: '3.8'

services:
  # Backend Django - Optimizado para Render Free Tier
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dhl-django-backend
    ports:
      - "${PORT:-10000}:8000"
    environment:
      - DEBUG=False
      - SECRET_KEY=${SECRET_KEY:-tu-clave-secreta-super-segura-cambiala-en-produccion}
      - ALLOWED_HOSTS=*
      - DATABASE_URL=${DATABASE_URL:-sqlite:///db.sqlite3}
      - DHL_USERNAME=${DHL_USERNAME:-apO3fS5mJ8zT7h}
      - DHL_PASSWORD=${DHL_PASSWORD:-J^4oF@1qW!0qS!5b}
      - DHL_BASE_URL=https://express.api.dhl.com
      - DHL_ENVIRONMENT=production
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-*}
      - DISABLE_COLLECTSTATIC=1
    volumes:
      - ./logs:/app/logs
      - ./media:/app/media
      - ./staticfiles:/app/staticfiles
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 400M
        reservations:
          memory: 200M
    command: >
      sh -c "python manage.py migrate &&
             gunicorn --bind 0.0.0.0:8000 --workers 1 --timeout 120 --max-requests 500 --max-requests-jitter 50 --worker-class sync --worker-connections 100 --preload dhl_project.wsgi:application"

# Comentado para Render Free Tier - Solo se usa SQLite
# PostgreSQL consumiría demasiados recursos (200MB+ adicionales)
#  postgres:
#    image: postgres:13-alpine
#    container_name: dhl-django-postgres
#    environment:
#      - POSTGRES_DB=dhl_db
#      - POSTGRES_USER=dhl_user
#      - POSTGRES_PASSWORD=dhl_password
#    volumes:
#      - postgres_data:/var/lib/postgresql/data
#    restart: unless-stopped
#    deploy:
#      resources:
#        limits:
#          memory: 200M
#        reservations:
#          memory: 100M

# Comentado para Render Free Tier - Se sirve como sitio estático separado
#  frontend:
#    build:
#      context: ./frontend
#      dockerfile: Dockerfile
#    container_name: dhl-django-frontend
#    ports:
#      - "3002:3000"
#    environment:
#      - REACT_APP_API_URL=/api
#      - REACT_APP_BACKEND_URL=/api
#      - REACT_APP_ENVIRONMENT=production
#      - GENERATE_SOURCEMAP=false
#    restart: unless-stopped
#    deploy:
#      resources:
#        limits:
#          memory: 300M
#        reservations:
#          memory: 150M

# volumes:
#  postgres_data: 
  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: dhl-react-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:10000/api
      - REACT_APP_BACKEND_URL=http://localhost:10000/api
      - REACT_APP_ENVIRONMENT=development
      - GENERATE_SOURCEMAP=false
    depends_on:
      - backend
    restart: unless-stopped
