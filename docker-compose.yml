version: '3.8'

services:
  # Backend Django
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dhl-django-backend
    ports:
      - "8001:8000"
    environment:
      - DEBUG=True
      - SECRET_KEY=tu-clave-secreta-super-segura-cambiala-en-produccion
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0,backend,backend:8000,dhl-django-backend,dhl-django-backend:8000,172.19.0.3,172.19.0.3:8000
      - DB_NAME=dhl_db
      - DB_USER=dhl_user
      - DB_PASSWORD=dhl_password
      - DB_HOST=postgres
      - DB_PORT=5432
      - DHL_USERNAME=apO3fS5mJ8zT7h
      - DHL_PASSWORD=J^4oF@1qW!0qS!5b
      - DHL_BASE_URL=https://express.api.dhl.com
      - DHL_ENVIRONMENT=production
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3002,http://127.0.0.1:3000
    volumes:
      - ./logs:/app/logs
      - ./media:/app/media
      - ./staticfiles:/app/staticfiles
    networks:
      - dhl-network
    depends_on:
      - postgres
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn --bind 0.0.0.0:8000 --workers 2 --timeout 300 --max-requests 1000 --max-requests-jitter 100 --worker-class sync dhl_project.wsgi:application"

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: dhl-django-frontend
    ports:
      - "3002:3000"
    environment:
      - REACT_APP_API_URL=/api
      - REACT_APP_BACKEND_URL=/api
      - REACT_APP_ENVIRONMENT=development
      - GENERATE_SOURCEMAP=false
      - FAST_REFRESH=false
      - WDS_SOCKET_HOST=localhost
      - WDS_SOCKET_PORT=3002
      - WATCHPACK_POLLING=true
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - dhl-network
    depends_on:
      - backend
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:13-alpine
    container_name: dhl-django-postgres
    environment:
      - POSTGRES_DB=dhl_db
      - POSTGRES_USER=dhl_user
      - POSTGRES_PASSWORD=dhl_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dhl-network
    restart: unless-stopped

networks:
  dhl-network:
    name: dhl-network

volumes:
  postgres_data: 